[
  {
    "objectID": "core.html",
    "href": "core.html",
    "title": "core",
    "section": "",
    "text": "source",
    "crumbs": [
      "core"
    ]
  },
  {
    "objectID": "core.html#preliminary-steps",
    "href": "core.html#preliminary-steps",
    "title": "core",
    "section": "Preliminary steps",
    "text": "Preliminary steps\nAll interactions with the telescope site must start with the creation of the session which is handled by the login method. The credentials used for the connection are initialised in the Telescope class constructor. The constructor calls login method as well. After creation the class should be ready for use.\nGood practice suggests that no credentials should ever be stored inside the code. Here we are using the config file stored in the user directory, outside of the code tree.\n\nscope=Telescope(config='~/.config/telescope.ini')\n\n\nCalls to internal API of the telescope.org page\n\nThese are used internally and are not intended for general use. They may and will change when the telescope.org internal functioning change.\n\nUser-API\nRequest Manager\nRequest Constructor\n\n\n\nsource\n\n\nTelescope.get_user_requests\nGet all user requests from folder (Inbox=1 by default), sorted by sort column (‘rid’ by default). Possible sort columns are: ‘rid’, ‘object’, ‘completion’ The data is returned as a list of dictionaries.\n\nreqs = scope.get_user_requests(sort='completion')\nprint(f'User {scope.user} has {len(reqs)} requests. Recent few:')\nfor rq in reqs[:10]:\n    print(f'{rq[\"id\"]}: {rq[\"objectname\"]:15}'\n          f' ({Telescope.REQUESTSTATUS_TEXTS[int(rq[\"status\"])]})')\n\nUser jochym has 1849 requests. Recent few:\n767380: EQ Lyr          (Complete)\n767374: SS Cyg          (Complete)\n767376: V686 Cyg        (Complete)\n767375: IP Cyg          (Complete)\n767373: CH Cyg          (Complete)\n766438: DX Vul          (Complete)\n766436: CH Cyg          (Complete)\n766435: T CrB           (Complete)\n766437: SS Cyg          (Complete)\n766264: T CrB_M         (Complete)\n\n\n\nsource\n\n\nTelescope.get_jid_for_req\n\n Telescope.get_jid_for_req (req=None)\n\n*Find and output jobID for the request. If request is not yet done returns False.\n\n\nInput\nreq : request dictionary or requestid\n\n\nOutput\nJobID if the request is completed, otherwise False*\n\nfor rq in reqs[:10]:\n    jid = scope.get_jid_for_req(rq)\n    print(f'{rq[\"id\"]}: {rq[\"objectname\"]:15}'\n          f' ({Telescope.REQUESTSTATUS_TEXTS[int(rq[\"status\"])]})'\n          f'  jid: {jid if jid else \"\"}')\n\n767380: EQ Lyr          (Complete)  jid: 419547\n767374: SS Cyg          (Complete)  jid: 419541\n767376: V686 Cyg        (Complete)  jid: 419543\n767375: IP Cyg          (Complete)  jid: 419542\n767373: CH Cyg          (Complete)  jid: 419540\n766438: DX Vul          (Complete)  jid: 418739\n766436: CH Cyg          (Complete)  jid: 418737\n766435: T CrB           (Complete)  jid: 418736\n766437: SS Cyg          (Complete)  jid: 418738\n766264: T CrB_M         (Complete)  jid: 418581\n\n\n\nsource\n\n\nTelescope.get_user_folders\n\n Telescope.get_user_folders ()\n\nGet all user folders. Returns list of dictionaries.\n\nscope.get_user_folders()\n\n[{'id': '1', 'creationtime': '0', 'name': 'Inbox', 'count': '1849'},\n {'id': '2', 'creationtime': '0', 'name': 'Favourites', 'count': None},\n {'id': '3', 'creationtime': '0', 'name': 'Archive', 'count': '447'},\n {'id': '4', 'creationtime': '0', 'name': 'Trash', 'count': '63'},\n {'id': '461',\n  'creationtime': '1407254495',\n  'name': 'Complete',\n  'count': '13'}]\n\n\n\nsource\n\n\nTelescope.get_obs_list\n\n Telescope.get_obs_list (t=None, dt=1, filtertype='', camera='', hour=16,\n                         minute=0, verb=False)\n\n*Get the dt days of observations taken no later then time in t.\n\n\nInput\nt - end time in seconds from the epoch (as returned by time.time()) dt - number of days, default to 1 filtertype - filter by type of filter used camera - filter by the camera/telescope used\n\n\nOutput\nReturns a list of JobIDs (int) for the observations.*\n\ndt = 1\nwhile True:\n    jobs = scope.get_obs_list(dt=dt, verb=False)\n    if jobs :\n        break\n    else :\n        dt += 1\njobs = scope.get_obs_list(dt=dt, verb=True)\nassert jobs\nprint(jobs[0], f'... ({len(jobs)-2} jobs) ...', jobs[-1])\n\nParams:\nEarliest completion time: 17/11/24 16:00:00\nLatest completion time: 18/11/24 16:00:59\nJob status values of:\n&nbsp - Success\nSorted by Completion time in descending order\nPrivate jobs excluded\n1000 results per page\n423342 ... (4 jobs) ... 423183\n\n\n\nsource\n\n\nTelescope.get_job\n\n Telescope.get_job (jid=None)\n\nGet a job data for a given JID\n\nobs = scope.get_job(jobs[-1])\nfor k, v in obs.items():\n    print(f'{k}: {v}')\n\njid: 423183\nrid: R771716 R771970 \ntype: MESSIER\noid: 109\nexp: 120000 ms\nfilter: BVR\ntele: Galaxy\ncompletion: ['18', 'November', '2024', '05:41:09', 'UTC']\nstatus: True\nflatid: 31\n\n\n\nobs = scope.get_job(369256)\nfor k, v in obs.items():\n    print(f'{k}: {v}')\n\nrsp1 = scope.__do_api_call(\"image-engine\", \"0-create-dlzip\", {'jid': obs['jid'],})\nprint(rsp1)\n\nrsp2 = scope.__do_api_call(\"image-engine\", \"0-is-job-ready\", {'ieid':rsp1['data']['ieID'],})\nprint(rsp2)\n\njid: 369256\nrid: 706248\ntype: RADEC\noid: 00:42:58.58 +36:28:18.97\nexp: 120000 ms\nfilter: BVR\ntele: Galaxy\ncompletion: ['22', 'December', '2020', '23:34:10', 'UTC']\nstatus: True\nflatid: 24\n{'success': 1, 'status': 'OK_READY', 'data': {'ieID': '1783970', 'flatID': 0}}\n{'success': 1, 'status': 'READY', 'data': {'flatID': '0', 'fitsbzsize': '8247874', 'fitssize': '0'}}\n\n\n\nsource\n\n\nTelescope.get_request\n\n Telescope.get_request (rid=None)\n\nGet request data for a given RID\n\nscope.get_request(int(obs['rid']))\nlast_complete = int(scope.get_request(int(rq['id']))['jid'])\nprint(f'Last complete jid: {last_complete}')\n\nLast complete jid: 418581\n\n\n\nsource\n\n\nTelescope.download_obs\n\n Telescope.download_obs (obs=None, directory='.', cube=True, pbar=False,\n                         verbose=False)\n\nDownload the raw observation obs (obtained from get_job) into zip file named job_jid.zip located in the directory (current by default). Alternatively, when the cube=True the file will be a 3D fits file. The name of the file (without directory) is returned.\n\nfor cube in (True, False):\n    fn = scope.download_obs(scope.get_job(369256), directory='/tmp', cube=cube, pbar=True, verbose=True)\n    if fn is not None:\n        print(f'Removing downloaded file: {fn}')\n        os.unlink(os.path.join('/tmp', fn))\n    else:\n        print('Download failed')\n\nOK_WAIT                       \nREADY                         \n\n\n\n\n\nRemoving downloaded file: 369256.fits\nOK_WAIT                       \nPROCESSING                    \nREADY                         \n\n\n\n\n\nRemoving downloaded file: 369256.zip\n\n\n\nsource\n\n\nTelescope.get_obs\n\n Telescope.get_obs (obs=None, cube=True, recurse=True, pbar=False,\n                    verbose=False)\n\nGet the raw observation obs (obtained from get_job) into zip file-like object. The function returns ZipFile structure of the downloaded data.\n\nscope.get_obs(obs, pbar=True)\n\n&lt;_io.BufferedReader name='.cache/jobs/3/6/369256.fits'&gt;\n\n\n\n(scope.get_obs(scope.get_job(last_complete), cube=False, verbose=True), \nscope.get_obs(scope.get_job(last_complete), cube=True, verbose=True),)\n\nOK_WAIT                       \nPROCESSING                    \nPROCESSING                    \nREADY                         \nOK_WAIT                       \nREADY                         \n\n\n(&lt;zipfile.ZipFile file=&lt;_io.BufferedReader name='.cache/jobs/4/1/418581.zip'&gt; mode='r'&gt;,\n &lt;_io.BufferedReader name='.cache/jobs/4/1/418581.fits'&gt;)\n\n\n\nsource\n\n\nTelescope.download_obs_processed\n\n Telescope.download_obs_processed (obs=None, directory='.', cube=False,\n                                   pbar=False)\n\nDownload the raw observation obs (obtained from get_job) into zip file named job_jid.zip located in the directory (current by default). Alternatively, when the cube=True the file will be a 3D fits file. The name of the file (without directory) is returned.\n\nprint(scope.download_obs_processed(obs, directory='OUT', cube=True, pbar=True))\nprint(scope.download_obs_processed(obs, directory='OUT', cube=False, pbar=True))\n\n\n\n\nart_369256.fits\n\n\n\n\n\nart_369256.zip\n\n\n\nsource\n\n\nTelescope.get_obs_processed\n\n Telescope.get_obs_processed (obs=None, cube=False)\n\nGet the raw observation obs (obtained from get_job) into zip file-like object. The function returns ZipFile structure of the downloaded data.\n\nscope.get_obs_processed(obs, cube=True)\n\n&lt;_io.BytesIO&gt;\n\n\n\nscope.get_obs_processed(obs, cube=False)\n\n&lt;zipfile.ZipFile file=&lt;_io.BytesIO object&gt; mode='r'&gt;\n\n\n\n\nJob submission methods\n\nSubmission API\n\n\nsource\n\n\nTelescope.submit_job_api\n\n Telescope.submit_job_api (obj, exposure=30000, tele='COAST', filt='BVR',\n                           darkframe=True, name='RaDec object',\n                           comment='AutoSubmit')\n\n\nsource\n\n\nTelescope.submit_RADEC_job\n\n Telescope.submit_RADEC_job (obj, exposure=30000, tele='COAST',\n                             filt='BVR', darkframe=True, name='RaDec\n                             object', comment='AutoSubmit')\n\n\nscope.logout()",
    "crumbs": [
      "core"
    ]
  },
  {
    "objectID": "25_vs.html",
    "href": "25_vs.html",
    "title": "ouscope",
    "section": "",
    "text": "source\n\nget_VS_sequence\n\n get_VS_sequence (vs, fov=60, maglimit=17, DEBUG=False)\n\n\nVS = 'SS Cyg'\nseq = get_VS_sequence(VS, 30, 16.5)\n\nprint(f'Sequence: {seq[0]} ({len(seq[1])} stars) for {VS}:')\nfor s in seq[1]:\n    print(f'{s[0]} ({s[1]:&gt;3})', end=' ')\n    for v in s[6:]:\n        print(f'{v:&gt;14}', end=' ')\n    print()\n\nSequence: X38910YE (8 stars) for SS Cyg:\n000-BCP-217 ( 96) 10.653 (0.097)  9.630 (0.081)  1.023 (0.126)  9.091 (0.094) \n000-BCP-198 ( 98) 10.162 (0.080)  9.794 (0.071)  0.368 (0.107)  9.601 (0.071) \n000-BCP-194 (103) 10.712 (0.094) 10.279 (0.073)  0.433 (0.119)              — \n000-BCP-224 (108) 10.954 (0.110) 10.831 (0.080)  0.123 (0.136)              — \n000-BCP-202 (109) 11.451 (0.032) 10.898 (0.027)  0.553 (0.042) 10.591 (0.027) \n000-BCP-241 (114) 12.038 (0.032) 11.413 (0.026)  0.625 (0.041) 11.051 (0.033) \n000-BCP-207 (119) 12.486 (0.019) 11.866 (0.015)  0.620 (0.024) 11.507 (0.019) \n000-BDC-473 (123) 12.898 (0.021) 12.279 (0.020)  0.619 (0.029) 11.937 (0.024) \n\n\n\nsource\n\n\nTelescope.submitVarStar\n\n Telescope.submitVarStar (name, expos=90, filt='BVR', comm='',\n                          tele='COAST')\n\n\nif False :\n    print(\"Submitting a VS job\")\n    rq = OSO.submitVarStar('V1223 Sgr', expos=180)\n    if rq[0] :\n        print(\"Waiting for job to be accepted\")\n        while (status:=OSO.get_request(int(rq[1]))['status'])!='Waiting' :\n            print(status, end='\\r')\n            sys.stdout.flush()\n            time.sleep(15)\n        print(status)\n        print(\"Cancelling the job\")\n        OSO.do_rm_api(\"0-cancel-request\", {'rid':int(rq[1])})\n        print(\"Waiting for job to be cancelled\")\n        while 'pending cancel' in (status:=OSO.get_request(int(rq[1]))['status']):\n            print(status, end='\\r')\n            sys.stdout.flush()\n            time.sleep(15)\n        print(status)\n    else :\n        print('Submission failed')\n\n\nscope=Telescope(config='~/.config/telescope.ini')\n\n\nreqlst=scope.get_user_requests(sort='completion')\nprint(f\"{'object':12} {'request time':19} {'id':12} {'status'}\")\nfor rq in sorted(reqlst, key=lambda r: int(r['requesttime']), reverse=True)[:20]:\n    print(f\"{rq['objectname']:12}\", \n          f\"{datetime.datetime.fromtimestamp(int(rq['requesttime']))}\",\n          f\"{rq['id']:12}\",\n          f\"{Telescope.REQUESTSTATUS_TEXTS[int(rq['status'])]}\"\n         )\n\nobject       request time        id           status\nEQ Lyr       2024-11-17 17:26:52 771981       Waiting\nDQ Vul       2024-11-17 17:26:51 771980       Waiting\nDX Vul       2024-11-17 17:26:50 771979       Waiting\nV686 Cyg     2024-11-17 17:26:49 771978       Waiting\nIP Cyg       2024-11-17 17:26:48 771977       Waiting\nSS Cyg       2024-11-17 17:26:47 771976       Waiting\nCH Cyg       2024-11-17 17:26:46 771975       Waiting\nV1223 Sgr    2024-11-17 17:26:46 771974       Waiting\nLX Cyg       2024-10-30 21:53:23 771144       Complete\nDQ Vul       2024-10-30 21:53:22 771142       Complete\nEQ Lyr       2024-10-30 21:53:22 771143       Complete\nDX Vul       2024-10-30 21:53:21 771141       Complete\nBI Her       2024-10-30 21:53:20 771140       Waiting\nV686 Cyg     2024-10-30 21:53:20 771139       Complete\nSS Cyg       2024-10-30 21:53:19 771137       Complete\nIP Cyg       2024-10-30 21:53:19 771138       Complete\nT CrB        2024-10-30 21:53:18 771135       Waiting\nCH Cyg       2024-10-30 21:53:18 771136       Complete\nEQ Lyr       2024-08-19 22:53:11 768921       Complete\nLX Cyg       2024-08-19 22:53:11 768922       Complete",
    "crumbs": [
      "25_vs.html"
    ]
  },
  {
    "objectID": "40_vsapp.html",
    "href": "40_vsapp.html",
    "title": "ouscope",
    "section": "",
    "text": "solver = Solver()\n\n\nOSO=Telescope(config='~/.config/telescope.ini')\n\n\nJob = namedtuple('Job', 'jid rid done')\n\n\nDB = SqliteDict('telescope.sqlite', autocommit=True)\nVSdb = SqliteDict('vstars.sqlite', autocommit=True)\n\n\nif not ('done' in DB):\n    DB['done'] = set()\nif not ('problematic' in DB):\n    DB['problematic'] = set()\ndone = DB['done']\nproblematic = DB['problematic']\n\n\nvsobs = pd.DataFrame([(vs[0], len(vs[1]['jobs'])) for vs in VSdb.items() \n                        if 'seq' in vs[1] and vs[1]['seq'] and \n                             vs[1]['seq'][0] and vs[1]['seq'][1]], columns=['Name', 'Jobs'])\n\n\nvariable_widget = pn.widgets.Select(name=\"variable\", value=\"Temperature\", options=list(vsobs['Name']))\n\n\npn.template.MaterialTemplate(\n    site=\"Panel\",\n    title=\"Getting Started App\",\n    sidebar=[variable_widget],\n    main=[],\n).servable(); # The ; is needed in the notebook to not display the template. Its not needed in a script",
    "crumbs": [
      "40_vsapp.html"
    ]
  },
  {
    "objectID": "CONTRIBUTING.html",
    "href": "CONTRIBUTING.html",
    "title": "How to contribute",
    "section": "",
    "text": "Before anything else, please install the git hooks that run automatic scripts during each commit and merge to strip the notebooks of superfluous metadata (and avoid merge conflicts). After cloning the repository, run the following command inside it:\nnbdev_install_git_hooks\n\n\n\n\nEnsure the bug was not already reported by searching on GitHub under Issues.\nIf you’re unable to find an open issue addressing the problem, open a new one. Be sure to include a title and clear description, as much relevant information as possible, and a code sample or an executable test case demonstrating the expected behavior that is not occurring.\nBe sure to add the complete error messages.\n\n\n\n\nOpen a new GitHub pull request with the patch.\nEnsure that your PR includes a test that fails without your patch, and pass with it.\nEnsure the PR description clearly describes the problem and solution. Include the relevant issue number if applicable.\n\n\n\n\n\n\nKeep each PR focused. While it’s more convenient, do not combine several unrelated fixes together. Create as many branches as needing to keep each PR focused.\nDo not mix style changes/fixes with “functional” changes. It’s very difficult to review such PRs and it most likely get rejected.\nDo not add/remove vertical whitespace. Preserve the original style of the file you edit as much as you can.\nDo not turn an already submitted PR into your development playground. If after you submitted PR, you discovered that more work is needed - close the PR, do the required work and then submit a new PR. Otherwise each of your commits requires attention from maintainers of the project.\nIf, however, you submitted a PR and received a request for changes, you should proceed with commits inside that PR, so that the maintainer can see the incremental fixes and won’t need to review the whole PR again. In the exception case where you realize it’ll take many many commits to complete the requests, then it’s probably best to close the PR, do the work and then submit it again. Use common sense where you’d choose one way over another.\n\n\n\n\n\nDocs are automatically created from the notebooks in the nbs folder."
  },
  {
    "objectID": "CONTRIBUTING.html#how-to-get-started",
    "href": "CONTRIBUTING.html#how-to-get-started",
    "title": "How to contribute",
    "section": "",
    "text": "Before anything else, please install the git hooks that run automatic scripts during each commit and merge to strip the notebooks of superfluous metadata (and avoid merge conflicts). After cloning the repository, run the following command inside it:\nnbdev_install_git_hooks"
  },
  {
    "objectID": "CONTRIBUTING.html#did-you-find-a-bug",
    "href": "CONTRIBUTING.html#did-you-find-a-bug",
    "title": "How to contribute",
    "section": "",
    "text": "Ensure the bug was not already reported by searching on GitHub under Issues.\nIf you’re unable to find an open issue addressing the problem, open a new one. Be sure to include a title and clear description, as much relevant information as possible, and a code sample or an executable test case demonstrating the expected behavior that is not occurring.\nBe sure to add the complete error messages.\n\n\n\n\nOpen a new GitHub pull request with the patch.\nEnsure that your PR includes a test that fails without your patch, and pass with it.\nEnsure the PR description clearly describes the problem and solution. Include the relevant issue number if applicable."
  },
  {
    "objectID": "CONTRIBUTING.html#pr-submission-guidelines",
    "href": "CONTRIBUTING.html#pr-submission-guidelines",
    "title": "How to contribute",
    "section": "",
    "text": "Keep each PR focused. While it’s more convenient, do not combine several unrelated fixes together. Create as many branches as needing to keep each PR focused.\nDo not mix style changes/fixes with “functional” changes. It’s very difficult to review such PRs and it most likely get rejected.\nDo not add/remove vertical whitespace. Preserve the original style of the file you edit as much as you can.\nDo not turn an already submitted PR into your development playground. If after you submitted PR, you discovered that more work is needed - close the PR, do the required work and then submit a new PR. Otherwise each of your commits requires attention from maintainers of the project.\nIf, however, you submitted a PR and received a request for changes, you should proceed with commits inside that PR, so that the maintainer can see the incremental fixes and won’t need to review the whole PR again. In the exception case where you realize it’ll take many many commits to complete the requests, then it’s probably best to close the PR, do the work and then submit it again. Use common sense where you’d choose one way over another."
  },
  {
    "objectID": "CONTRIBUTING.html#do-you-want-to-contribute-to-the-documentation",
    "href": "CONTRIBUTING.html#do-you-want-to-contribute-to-the-documentation",
    "title": "How to contribute",
    "section": "",
    "text": "Docs are automatically created from the notebooks in the nbs folder."
  },
  {
    "objectID": "solver.html",
    "href": "solver.html",
    "title": "solver",
    "section": "",
    "text": "source\n\nSolver\n\n Solver (api_key=None, cache='.cache/wcs', cmd=None, args=None)\n\nWrapper of AstrometryNet solver from astropy tuned for the use in osob use.\n\nsource\n\n\nSolver.solve\n\n Solver.solve (hdu, crop=(slice(0, -32, None), slice(0, -32, None)),\n               force_solve=False, tout=None)\n\nSolve plate in fits format using local (if present) or remote (not fully implemented yet) AstrometryNet solver\n\nconfig = configparser.ConfigParser()\nconfig.read(expanduser('~/.config/telescope.ini'))\nsolver = Solver(config['astrometry.net']['apikey'])\n\nscope=Telescope(config='~/.config/telescope.ini')\n\n\nreqlst=scope.get_user_requests(sort='completion')\nfor rq in sorted(reqlst, key=lambda r: int(r['requesttime']), reverse=True):\n    if Telescope.REQUESTSTATUS_TEXTS[int(rq['status'])]=='Complete':\n        break\nousutil.print_dict(rq)\nprint()\nousutil.print_dict(scope.get_request(int(rq['id'])))\nlast_complete = int(scope.get_request(int(rq['id']))['jid'])\n\nid: 771144\nseen: 1\nusercomments: AAVSO\nobjecttype: RADEC\nobjectid: 21:55:57.03 +48:20:52.52\nobjectname: LX Cyg\nrequesttime: 1730321603\nstatus: 8\nrow: 113\n\nrid: 771144\njid: 422672\ntype: RADEC\noid: 21:55:57.03 +48:20:52.52\nname: LX Cyg\nexp: 180000 ms\nfilter: BVR\ndark: Instant\ntele_type: Galaxy\ntele: COAST\nrequested: ['30', 'October', '2024', '20:53:23', 'UTC']\ncompletion: ['11', 'November', '2024', '00:25:33', 'UTC']\nstatus: Complete\n\n\n\nffn = scope.get_obs(scope.get_job(last_complete)).name\nprint(last_complete, '--&gt;', ffn)\nhdu = fits.open(ffn, cube=True, verbose=True)[0]\n\ns_hdu = solver.solve(hdu)\n\nassert s_hdu\n\nw = WCS(s_hdu, naxis=2)\nw.printwcs()\n\n422672 --&gt; .cache/jobs/4/2/422672.fits\nSolving for 871C3AC8\nsolve-field -p -l 15 -O -L 1 -H 2 -u app -3 328.987500 -4 48.347778 -5 2 /tmp/field-solver1pjva1vt/tmpnkuaqevx.fits\nWCS Keywords\n\nNumber of WCS axes: 2\nCTYPE : 'RA---TAN-SIP' 'DEC--TAN-SIP' \nCRVAL : 328.892169298 48.2980299761 \nCRPIX : 909.534133911 632.779216766 \nCD1_1 CD1_2  : -0.000467341943674 -7.38084875081e-06 \nCD2_1 CD2_2  : -7.70366801401e-06 0.000467066492949 \nNAXIS : 1536  1536  3\n\n\nWARNING: FITSFixedWarning: EPOCH = 'REAL' \na floating-point value was expected. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: RADECSYS= 'ICRS' \nthe RADECSYS keyword is deprecated, use RADESYSa. [astropy.wcs.wcs]\n\n\n\nhd = solver.ast.solve_from_image(ffn, force_image_upload=True)\nWCS(hd, naxis=2).printwcs()\n\nSolving............WCS Keywords\n\nNumber of WCS axes: 2\nCTYPE : 'RA---TAN-SIP' 'DEC--TAN-SIP' \nCRVAL : 329.014424178 48.4825814278 \nCRPIX : 729.613105774 1025.02197266 \nCD1_1 CD1_2  : -0.000467115230037 -6.83923132343e-06 \nCD2_1 CD2_2  : -6.85954795315e-06 0.000466847668568 \nNAXIS : 0  0",
    "crumbs": [
      "solver"
    ]
  },
  {
    "objectID": "util.html",
    "href": "util.html",
    "title": "util",
    "section": "",
    "text": "scope=Telescope(config='~/.config/telescope.ini')\n\n\nsource\n\nTelescope.get_object_obs\n\n Telescope.get_object_obs (obj:str)\n\nFind all jobs for a given object.\n\nreqlst=scope.get_user_requests(sort='completion')\ncomplete = [rq for rq in sorted(reqlst, key=lambda r: int(r['requesttime']), reverse=True) \n                        if Telescope.REQUESTSTATUS_TEXTS[int(rq['status'])]=='Complete']\n\n\n# Get all observations of VS\nVS = 'BI Her'\njlist = sorted(list(scope.get_object_obs(VS)))\nprint(f'Completed observations of {VS}: {len(jlist)}')\n\nfor jid, rid in tqdm(jlist):\n    # print(f\"R{rid}:J{jid}\")\n    try :\n        data = scope.get_obs(scope.get_job(jid), cube=True, verbose=False)\n        if data :\n            fp = f'VS/{\"_\".join(VS.split())}'\n            os.makedirs(fp, exist_ok=True)\n            fn = f'{jid}'\n            try :\n                # print(os.path.abspath(data.name), f'{fp}/{fn}.fits')\n                os.symlink(os.path.abspath(data.name), f'{fp}/{fn}.fits')\n            except FileExistsError:\n                pass\n            # with open(f'/home/jochym/Astro/VS/{\"_\".join(VS.split())}/{jid}.fits', 'wb') as ff:\n            #     ff.write(data.read())\n        else :\n            print(f'Download of J{jid} failed (no data)')\n    except TimeoutError:\n        print(f'Download of J{jid} failed (timeout)')\n        continue\n\nNumber of users requests: 1849\nCompleted: 1821\nCompleted observations of BI Her: 192\n\n\n\n\n\n\n# get all completed jobs\nfor rq in (pbar := tqdm(complete[:25])):\n    name = rq['objectname']\n    rid = int(rq['id'])\n    pbar.set_postfix_str(name)\n    try:\n        jid = int(scope.get_request(rid)['jid'])\n        data = scope.get_obs(scope.get_job(jid), cube=True, verbose=False)\n        if data :\n            fp = f'VS/{\"_\".join(name.split())}'\n            os.makedirs(fp, exist_ok=True)\n            fn = f'{jid}'\n            try :\n                os.symlink(os.path.abspath(data.name), f'{fp}/{fn}.fits')\n            except FileExistsError:\n                pass\n        else :\n            print(f'Download of J{jid} failed')\n    except TimeoutError :\n        print(f'Download of J{jid} failed, timeout')\n        pass",
    "crumbs": [
      "util"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "OUScope",
    "section": "",
    "text": "The library provides access and control for the telescope. The functions help with job submission, image retrival and initial analysis. For naw this is aimed at variable star observations, but there is nothing prohibiting additional modules intended for different fields (e.g. astrometry).",
    "crumbs": [
      "OUScope"
    ]
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "OUScope",
    "section": "Install",
    "text": "Install\nThe package is not yet published to pypi/conda, thus for now the only way to install it is the developer-style install. I recommend the following sequence:\ngit clone https://github.com/jochym/ouscope.git\ncd ouscope\npython3 -m venv venv \n. venv/bin/activate\n\npip install -e .\nLater on you just go to the ouscope directory and run:\n. venv/bin/activate\nto activate the virtual environment.\n\nUpdate\nWith developer install the upgrade is simple, git pull should do the trick :\ncd ouscope\ngit pull\nWhen the set of dependecies changes you may need to\npip uninstall ouscope ; pip install -e .\nto refresh your setup.",
    "crumbs": [
      "OUScope"
    ]
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "OUScope",
    "section": "How to use",
    "text": "How to use\nThe library is not ready but you can try to use it for some tasks. Before this example will run you need to have some additional setup:\n\nLocal AstrometryNet solver (solve-field command) installed and configured. It is possible to use nova.astrometry.net solver but the automatic interaction/switching is not complete yet. You can modify the example to use it (see Solver docs for some guidance)\nThe config file for your telescope.org account. The cache directories will be created in the current working directory with this setup. You may move them to some other place (e.g. ~/.cache/ouscope):\n\n[cache]\nwcs=.cache/wcs\njobs=.cache/jobs\nseq=.cache/seq\n\n[telescope.org]\nuser=jour_user_name\npassword=your_password\n\n[astrometry.net]\napikey=your_astrometry.net_api_key\n\nIf it still does not work, please submit a github issue. I do not have many systems to test the library on. Below is a simple example.\n\nInteracting with telescope.org\nThe code below: - creates the Telescope object scope - automatically logs-in to the user from the config file - lists user folders - gets user requests sorted by request ID (i.e. submission order) - goes over the list until five completed requests are listed - downloads the latest completed job into obs variable - prints JobID:RequestID, target name,\n\n\nCode\nfrom ouscope.core import Telescope\n\nscope=Telescope(config='~/.config/telescope.ini')\n\nprint(\"User folders:\")\nfor f in scope.get_user_folders():\n    cnt = f[\"count\"] \n    if cnt is None:\n        cnt = 0\n    print(f'{f[\"name\"]:&gt;12} ({f[\"id\"]:&gt;3}): {cnt:&gt;4} items')\n\nreqlst=scope.get_user_requests(sort='rid')\n\nprint(f'\\nUser {scope.user} has {len(reqlst)} requests.')\nprint(\"\\nThe most recent requests:\")\nlast_complete = None\ncomplete = []\nn = 10\nfor rq in reqlst:\n    jid = scope.get_jid_for_req(rq)\n    print(f'{rq[\"id\"]}: {rq[\"objectname\"]:15} jid: {(jid if jid else \"\"):6}', end=' ')\n    print(f'{Telescope.REQUESTSTATUS_TEXTS[int(rq[\"status\"])]}')\n    if rq[\"status\"]=='8':\n        complete.append(jid)\n        if last_complete is None:\n            last_complete = jid\n        n -= 1\n    if n&lt;0 :\n        break\nprint()\n\njid = complete[6]\n# Let us show the newest job\njob = scope.get_job(int(jid))\nreq = scope.get_request(int(job['rid']))\ntarget = req['name'].lstrip().rstrip()\n\nprint('The latest complete job:')\nprint(f'J{jid}:R{job[\"rid\"]} ({target}) Completed at: {\" \".join(job[\"completion\"])}')\n\nobs = scope.get_obs(job, verbose=True)\n\nscope.logout()\n\n\nUser folders:\n       Inbox (  1): 1849 items\n  Favourites (  2):    0 items\n     Archive (  3):  447 items\n       Trash (  4):   63 items\n    Complete (461):   13 items\n\nUser jochym has 1849 requests.\n\nThe most recent requests:\n771981: EQ Lyr          jid:        Waiting\n771980: DQ Vul          jid:        Waiting\n771979: DX Vul          jid:        Waiting\n771978: V686 Cyg        jid:        Waiting\n771977: IP Cyg          jid:        Waiting\n771976: SS Cyg          jid:        Waiting\n771975: CH Cyg          jid:        Waiting\n771974: V1223 Sgr       jid:        Waiting\n771144: LX Cyg          jid: 422672 Complete\n771143: EQ Lyr          jid: 422671 Complete\n771142: DQ Vul          jid: 422670 Complete\n771141: DX Vul          jid: 422669 Complete\n771140: BI Her          jid:        Waiting\n771139: V686 Cyg        jid: 422667 Complete\n771138: IP Cyg          jid: 422666 Complete\n771137: SS Cyg          jid: 422665 Complete\n771136: CH Cyg          jid: 422664 Complete\n771135: T CrB           jid:        Waiting\n768922: LX Cyg          jid: 420780 Complete\n768921: EQ Lyr          jid: 420779 Complete\n768920: DQ Vul          jid: 420778 Complete\n\nThe latest complete job:\nJ422665:R771137 (SS Cyg) Completed at: 11 November 2024 00:02:39 UTC\n\n\n\n\nAnalysis of the data\nLet us plot and analyse the last completed job listed above.\nThe code below performs following tasks:\n\nopens the data downloaded above (obs variable)\nplate-solves the resultings fits data (with local AstrometryNet solver)\ncreates WCS object from the solution\nplots the RGB image of the data with RA-DEC grid\nquery the Vizier database for variable stars 0.25 deg from center\nmark all objects found on the picture\n\n\n\nCode\nfrom astropy.io import fits\nfrom astropy.wcs import WCS\nfrom astropy.coordinates import SkyCoord\nimport astropy.units as u\nfrom astroquery.vizier import Vizier\nimport matplotlib.pyplot as plt\nfrom ouscope.solver import Solver\nfrom ouscope.process import make_color_image\n\n\n\n\nCode\nsolver = Solver()\n\nhdu = fits.open(obs)[0]\n\nwcs_head = solver.solve(hdu, tout=30)\nwcs = WCS(wcs_head, naxis=2)\nwcs.printwcs()\n\n\nGetting 3FC31541 from cache\nWCS Keywords\n\nNumber of WCS axes: 2\nCTYPE : 'RA---TAN-SIP' 'DEC--TAN-SIP' \nCRVAL : 325.664456137 43.3443615705 \nCRPIX : 792.579582214 218.743708611 \nCD1_1 CD1_2  : -0.000467545013261 -7.21595587477e-06 \nCD2_1 CD2_2  : -6.87748343483e-06 0.000467154442828 \nNAXIS : 1536  1536  3\n\n\nWARNING: FITSFixedWarning: EPOCH = 'REAL' \na floating-point value was expected. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: RADECSYS= 'ICRS' \nthe RADECSYS keyword is deprecated, use RADESYSa. [astropy.wcs.wcs]\n\n\n\n\nCode\nfig = plt.figure(figsize=(8,8))\nax = plt.subplot(projection=wcs)\nplt.grid(color='white', ls='solid', lw=0.5)\n\n# crop the data to remove overscan noise\nl, r, t, b = (0, 32, 0, 32)\nplt.imshow(make_color_image(hdu.data[:, l:-r, t:-b],\n                            order=hdu.header[\"FILTER\"].split(\",\")))\n\ncenter = wcs.pixel_to_world(wcs_head['NAXIS1']/2,wcs_head['NAXIS2']/2)\nobjects = Vizier.query_region(catalog='B/gcvs', \n                             coordinates=center, \n                             radius='0.25deg')\nfor g in objects:\n    for n, o in enumerate(g):\n        name = o['VarName']\n        radec = SkyCoord(o['RAJ2000'] + o['DEJ2000'], \n                         frame='icrs', unit=(u.hourangle, u.deg))\n        ax.scatter([radec.ra.deg, radec.ra.deg], \n                   [radec.dec.deg-0.01, radec.dec.deg+0.01], \n                   marker='|', s=30,\n                   color='white',\n                   transform=ax.get_transform('world'))\n        ax.text(radec.ra.deg, radec.dec.deg+0.014, \n                f'{name} ({o[\"magMax\"]:.1f})', \n                transform=ax.get_transform('world'), color='white')\n\n\n\n\n\n\n\n\n\n\n\nList of objects (variable stars) in the frame\n\n\nTable length=1\n\nGCVSn_GCVSRAJ2000DEJ2000VarTypemagMaxPeriodSpTypeExistsVarNameSimbad\nmagd\nstr10str1str11str11str10float32float64str17str12str11str6\nSS Cyg*21 42 42.79+43 35 09.9UGSS7.70049.5000000000K5V+pec(UG)SS    CygSimbad",
    "crumbs": [
      "OUScope"
    ]
  },
  {
    "objectID": "usage.html",
    "href": "usage.html",
    "title": "Usage",
    "section": "",
    "text": "from ouscope.core import Telescope\nimport configparser\nfrom os.path import expanduser\n\nconfig = configparser.ConfigParser()\nconfig.read(expanduser('~/.config/telescope.ini'))\n\nscope=Telescope(config['telescope.org']['user'], \n              config['telescope.org']['password'])\n\nprint(\"User folders:\")\nfor f in scope.get_user_folders():\n    cnt = f[\"count\"] \n    if cnt is None:\n        cnt = 0\n    print(f'{f[\"name\"]:&gt;12} ({f[\"id\"]:&gt;3}): {cnt:&gt;4} items')\n\nreqlst=scope.get_user_requests(sort='rid')\n\nprint(f'User {scope.user} has {len(reqlst)} requests.')\nprint(\"The most recent completed requests:\")\n\nn = 10\nfor rq in reqlst:\n    if rq[\"status\"]=='8':\n        print(f'{rq[\"id\"]}: {rq[\"objectname\"]:15} jid: {scope.get_jid_for_req(rq)}')\n        n -= 1\n    if n&lt;0 :\n        break\n\nscope.logout()\n\nUser folders:\n       Inbox (  1): 1849 items\n  Favourites (  2):    0 items\n     Archive (  3):  447 items\n       Trash (  4):   63 items\n    Complete (461):   13 items\nUser jochym has 1849 requests.\nThe most recent completed requests:\n771144: LX Cyg          jid: 422672\n771143: EQ Lyr          jid: 422671\n771142: DQ Vul          jid: 422670\n771141: DX Vul          jid: 422669\n771139: V686 Cyg        jid: 422667\n771138: IP Cyg          jid: 422666\n771137: SS Cyg          jid: 422665\n771136: CH Cyg          jid: 422664\n768922: LX Cyg          jid: 420780\n768921: EQ Lyr          jid: 420779\n768920: DQ Vul          jid: 420778",
    "crumbs": [
      "Usage"
    ]
  },
  {
    "objectID": "25_scripts.html",
    "href": "25_scripts.html",
    "title": "ouscope",
    "section": "",
    "text": "from fastcore.basics import patch",
    "crumbs": [
      "25_scripts.html"
    ]
  },
  {
    "objectID": "process.html",
    "href": "process.html",
    "title": "process",
    "section": "",
    "text": "solver = Solver()\n\n\nOSO=Telescope(config='~/.config/telescope.ini')\n\n\nJob = namedtuple('Job', 'jid rid done')\n\n\nDB = SqliteDict('telescope.sqlite', autocommit=True)\nVSdb = SqliteDict('vstars.sqlite', autocommit=True)\n\n\nif not ('done' in DB):\n    DB['done'] = set()\nif not ('problematic' in DB):\n    DB['problematic'] = set()\ndone = DB['done']\nproblematic = DB['problematic']\n\n\n# VSdb['BE Vul']\n\n\nfor vs in VSdb.items():\n    if 'seq' in vs[1] and vs[1]['seq'] and vs[1]['seq'][0] and vs[1]['seq'][1]:\n        print(vs[0], len(vs[1]['jobs']) )\n    else :\n        # print(vs)\n        pass\n\n\nsource\n\nplot_sequence\n\n plot_sequence (vs)\n\n\nsource\n\n\nprocess_job\n\n process_job (jid, reprocess=False, cls=True, layer=None)\n\n\nsource\n\n\nanalyse_job\n\n analyse_job (jid, rid=None, reprocess=False)\n\n\nreqlst=OSO.get_user_requests(sort='completion')\nprint(f'Number of users requests: {len(reqlst)}')\n\ncomplete = [rq for rq in sorted(reqlst, key=lambda r: int(r['requesttime']), reverse=True) \n                    if Telescope.REQUESTSTATUS_TEXTS[int(rq['status'])]=='Complete']\nprint('Completed:', len(complete))\n\nNumber of users requests: 1849\nCompleted: 1821\n\n\n\nfor r in complete[:5]:\n    j = OSO.get_request(int(r['id']))\n    o = OSO.get_job(int(j['jid']))\n    f = OSO.get_obs(o, verbose=True)\n\n    analyse_job(o['jid'], reprocess=True)\n    \n    plt.figure(figsize=(8,8))\n    process_job(o['jid'], reprocess=True, cls=False)\n    plt.show()\n\nJ422672:R771144 (LX Cyg) 11 November 2024 00:25:33 UTC\nFilters: R V B\nSolving for EEAD1B8F\nsolve-field -p -l 30 -O -L 1 -H 2 -u app -3 328.987500 -4 48.347778 -5 2 /tmp/field-solverje1asjpl/tmp5g2rwh0v.fits\n\n\nWARNING: FITSFixedWarning: EPOCH = 'REAL' \na floating-point value was expected. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: RADECSYS= 'ICRS' \nthe RADECSYS keyword is deprecated, use RADESYSa. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: 'datfix' made the change 'Set MJD-OBS to 60625.012182 from DATE-OBS'. [astropy.wcs.wcs]\n\n\nLV Cyg seq:X38910YH (41)\nLX Cyg seq:X38910YI (44)\nLY Cyg seq:X38910YJ (40)\nV681 Cyg seq:X38910YK (32)\nV682 Cyg seq:X38910YL (13)\nV2173 Cyg seq:X38910YM (9)\nV2657 Cyg seq:X38910YN (17)\nNSV_13959 \nNSV_25782 \njid 422672: (LX Cyg)\n11 November 2024 00:25:33 UTC\nFilters: ('R', 'V', 'B')\nGetting EEAD1B8F from cache\n\n\nWARNING: FITSFixedWarning: EPOCH = 'REAL' \na floating-point value was expected. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: RADECSYS= 'ICRS' \nthe RADECSYS keyword is deprecated, use RADESYSa. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: 'datfix' made the change 'Set MJD-OBS to 60625.012182 from DATE-OBS'. [astropy.wcs.wcs]\n\n\n   GCVS   n_GCVS   RAJ2000     DEJ2000   ...    SpType   Exists  VarName  Simbad\n                                         ...                                    \n--------- ------ ----------- ----------- ... ----------- ------ --------- ------\n   LV Cyg      x 21 55 08.02 +48 13 48.2 ...          M7        LV    Cyg Simbad\n   LX Cyg      * 21 55 57.07 +48 20 50.9 ... SC3e-S5,5e:        LX    Cyg Simbad\n   LY Cyg      x 21 56 10.40 +48 04 13.3 ...          M5        LY    Cyg Simbad\nV0681 Cyg      x 21 55 25.24 +48 29 24.8 ...                    V0681 Cyg Simbad\nV0682 Cyg      x 21 56 23.65 +48 37 54.6 ...          M6        V0682 Cyg Simbad\nV2173 Cyg      x 21 57 02.23 +48 40 06.8 ...                    V2173 Cyg Simbad\nV2657 Cyg      x 21 53 38.07 +48 24 13.4 ...                    V2657 Cyg Simbad\n['000-BCP-557', '75', '21:54:42.03', 328.67510986, '48:11:55.4', 48.19872284, '7.783 (0.080)', '7.501 (0.072)', '0.282 (0.108)', '—']\n['000-BCP-564', '79', '21:54:52.56', 328.71899414, '48:33:16.8', 48.55466843, '7.943 (0.073)', '7.909 (0.064)', '0.034 (0.097)', '—']\n['000-BCP-669', '83', '21:57:27.76', 329.36566162, '48:02:20.0', 48.03889084, '8.284 (0.071)', '8.313 (0.062)', '-0.029 (0.094)', '—']\n['000-BCP-593', '90', '21:55:16.26', 328.81774902, '48:19:31.1', 48.32530594, '9.176 (0.074)', '8.970 (0.064)', '0.206 (0.098)', '—']\n['000-BCP-664', '96', '21:57:02.85', 329.26187134, '48:22:49.9', 48.3805275, '10.445 (0.082)', '9.636 (0.067)', '0.809 (0.106)', '—']\n['000-BCP-534', '97', '21:54:04.73', 328.51971436, '48:30:01.5', 48.5004158, '10.152 (0.082)', '9.749 (0.066)', '0.403 (0.105)', '—']\n['000-BCP-646', '97', '21:56:14.18', 329.05908203, '48:06:42.4', 48.11177826, '10.921 (0.095)', '9.746 (0.069)', '1.175 (0.117)', '—']\n['000-BCP-672', '101', '21:57:35.27', 329.39697266, '48:15:33.8', 48.25938797, '10.608 (0.084)', '10.133 (0.058)', '0.475 (0.102)', '—']\n['000-BCP-642', '110', '21:56:11.29', 329.04702759, '48:22:32.1', 48.37558365, '12.172 (0.227)', '10.964 (0.062)', '1.208 (0.235)', '—']\n['000-BCP-617', '112', '21:55:49.79', 328.9574585, '48:11:44.9', 48.1958046, '11.714 (0.149)', '11.178 (0.071)', '0.536 (0.165)', '—']\n['000-BCP-647', '115', '21:56:14.46', 329.0602417, '48:01:40.0', 48.02777863, '12.453 (0.086)', '11.522 (0.079)', '0.931 (0.117)', '10.973 (0.088)']\n['000-BCP-630', '117', '21:56:01.22', 329.00509644, '48:04:55.0', 48.08194351, '12.663 (0.096)', '11.664 (0.077)', '0.999 (0.123)', '11.090 (0.088)']\n['000-BCP-635', '117', '21:56:05.77', 329.02404785, '48:25:53.9', 48.43164062, '11.754 (0.193)', '11.680 (0.071)', '0.074 (0.206)', '—']\n['000-BCP-578', '119', '21:55:04.27', 328.76779175, '48:14:34.3', 48.2428627, '12.682 (0.335)', '11.860 (0.164)', '0.822 (0.373)', '—']\n['000-BCP-626', '122', '21:55:59.45', 328.99771118, '48:15:33.9', 48.25941849, '12.526 (0.325)', '12.215 (0.183)', '0.311 (0.373)', '—']\n['000-BCP-613', '123', '21:55:46.36', 328.94317627, '48:08:37.0', 48.14361191, '12.540 (0.018)', '12.287 (—)', '0.253 (0.018)', '12.148 (0.004)']\n['000-BCP-616', '124', '21:55:48.30', 328.95126343, '48:21:23.7', 48.35658264, '—', '12.441 (0.117)', '—', '—']\n['000-BCP-576', '125', '21:55:02.07', 328.75863647, '48:17:43.5', 48.29541779, '—', '12.518 (0.089)', '—', '—']\n['000-BCP-653', '126', '21:56:27.21', 329.1133728, '48:03:08.5', 48.05236053, '13.091 (0.006)', '12.554 (—)', '0.537 (0.006)', '12.236 (0.004)']\n['000-BCP-611', '128', '21:55:40.35', 328.91812134, '48:22:15.2', 48.37088776, '—', '12.777 (0.070)', '—', '—']\n['000-BCP-560', '129', '21:54:45.69', 328.69036865, '48:17:43.2', 48.29533386, '—', '12.924 (0.125)', '—', '—']\n['000-BCP-599', '129', '21:55:21.53', 328.83972168, '48:23:04.2', 48.3844986, '—', '12.909 (0.221)', '—', '—']\n['000-BCP-657', '129', '21:56:37.73', 329.15719604, '48:09:12.4', 48.15344238, '13.474 (0.013)', '12.889 (0.006)', '0.585 (0.014)', '12.509 (0.006)']\n['000-BCP-562', '133', '21:54:50.74', 328.71142578, '48:15:04.0', 48.25111008, '—', '13.289 (0.159)', '—', '—']\n['000-BCP-648', '133', '21:56:14.88', 329.06201172, '48:02:11.7', 48.03658295, '13.543 (0.006)', '13.261 (—)', '0.282 (0.006)', '13.149 (0.010)']\n['000-BCP-627', '135', '21:55:59.71', 328.9987793, '48:03:47.3', 48.06314087, '13.857 (0.002)', '13.526 (—)', '0.331 (0.002)', '13.357 (0.008)']\n['000-BCP-641', '135', '21:56:10.44', 329.04348755, '48:21:35.0', 48.35972214, '—', '13.513 (0.063)', '—', '—']\n['000-BCP-604', '138', '21:55:28.43', 328.86846924, '48:17:01.4', 48.28372192, '—', '13.758 (—)', '—', '—']\n['000-BCP-631', '138', '21:56:01.64', 329.00683594, '48:03:52.0', 48.0644455, '14.501 (—)', '13.762 (—)', '0.739 (—)', '13.322 (0.004)']\n['000-BCP-632', '140', '21:56:02.92', 329.01217651, '48:20:34.2', 48.34283447, '—', '13.978 (0.066)', '—', '—']\n['000-BCP-622', '141', '21:55:54.33', 328.97637939, '48:02:24.2', 48.04005432, '15.153 (0.010)', '14.111 (0.008)', '1.042 (0.013)', '13.524 (0.010)']\n['000-BCP-638', '142', '21:56:09.03', 329.03762817, '48:04:15.5', 48.07097244, '16.061 (0.029)', '14.153 (0.029)', '1.908 (0.041)', '12.383 (0.039)']\n['000-BJS-541', '142', '21:55:36.31', 328.90130615, '48:11:26.3', 48.1906395, '14.868 (0.030)', '14.198 (0.025)', '0.670 (0.039)', '13.791 (0.039)']\n['000-BJS-542', '144', '21:55:07.54', 328.78140259, '48:17:03.8', 48.2843895, '14.925 (0.068)', '14.370 (0.014)', '0.555 (0.069)', '14.022 (0.030)']\n['000-BCP-636', '145', '21:56:07.24', 329.03018188, '48:06:10.2', 48.10283279, '15.634 (0.006)', '14.545 (0.006)', '1.089 (0.008)', '13.922 (0.006)']\n['000-BCP-639', '148', '21:56:09.49', 329.03955078, '48:05:12.3', 48.08675003, '15.624 (0.006)', '14.850 (0.006)', '0.774 (0.008)', '14.398 (0.007)']\n['000-BCP-629', '149', '21:56:01.15', 329.00479126, '48:21:25.9', 48.35719299, '—', '14.937 (0.079)', '—', '—']\n['000-BJS-543', '150', '21:55:30.62', 328.87759399, '48:17:55.6', 48.29877853, '15.609 (0.024)', '14.962 (0.011)', '0.647 (0.026)', '14.560 (0.029)']\n['000-BCP-620', '153', '21:55:53.22', 328.97174072, '48:21:39.9', 48.36108398, '—', '15.299 (0.088)', '—', '—']\n['000-BCP-645', '153', '21:56:14.05', 329.05853271, '48:04:49.5', 48.08041763, '15.956 (0.004)', '15.297 (—)', '0.659 (0.004)', '14.892 (0.008)']\n['000-BCP-561', '155', '21:54:45.80', 328.69082642, '48:14:28.3', 48.24119568, '—', '15.457 (—)', '—', '—']\n['000-BCP-581', '156', '21:55:06.72', 328.77801514, '48:15:20.8', 48.25577927, '—', '15.585 (—)', '—', '—']\n['000-BCP-649', '156', '21:56:17.88', 329.07449341, '48:05:16.5', 48.08791733, '16.239 (0.007)', '15.561 (0.006)', '0.678 (0.009)', '15.133 (0.020)']\n['000-BCP-575', '158', '21:55:00.89', 328.75372314, '48:16:00.3', 48.26675034, '—', '15.789 (—)', '—', '—']\nf_NSV  NSV  u_NSV n_NSV  RAJ2000    DEJ2000  VarType magMax SpType VarName\n                                                      mag                 \n----- ----- ----- ----- ---------- --------- ------- ------ ------ -------\n      13959     -     * 21 54 48.4 +48 20 43     CST  13.20     K5        \n      25782           * 21 52 47.8 +48 01 21           9.63  B1/2V        \n\n\n\n\n\n\n\n\n\n&lt;Figure size 640x480 with 0 Axes&gt;\n\n\n&lt;Figure size 640x480 with 0 Axes&gt;\n\n\nJ422671:R771143 (EQ Lyr) 10 November 2024 20:24:07 UTC\nFilters: R V B\nSolving for 3371DF4E\nsolve-field -p -l 30 -O -L 1 -H 2 -u app -3 289.758333 -4 41.109444 -5 2 /tmp/field-solver7o6os7or/tmp_kdmm45h.fits\n\n\nWARNING: FITSFixedWarning: EPOCH = 'REAL' \na floating-point value was expected. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: RADECSYS= 'ICRS' \nthe RADECSYS keyword is deprecated, use RADESYSa. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: 'datfix' made the change 'Set MJD-OBS to 60624.844532 from DATE-OBS'. [astropy.wcs.wcs]\n\n\nEQ Lyr seq:X38910YP (9)\nV476 Lyr seq:X38910YQ (3)\nV588 Lyr seq:X38910YR (8)\njid 422671: (EQ Lyr)\n10 November 2024 20:24:07 UTC\nFilters: ('R', 'V', 'B')\nGetting 3371DF4E from cache\n\n\nWARNING: FITSFixedWarning: EPOCH = 'REAL' \na floating-point value was expected. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: RADECSYS= 'ICRS' \nthe RADECSYS keyword is deprecated, use RADESYSa. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: 'datfix' made the change 'Set MJD-OBS to 60624.844532 from DATE-OBS'. [astropy.wcs.wcs]\n\n\n   GCVS   n_GCVS   RAJ2000     DEJ2000   ... SpType Exists  VarName  Simbad\n                                         ...                               \n--------- ------ ----------- ----------- ... ------ ------ --------- ------\n   EQ Lyr      x 19 19 02.63 +41 06 34.5 ...               EQ    Lyr Simbad\nV0476 Lyr      x 19 19 49.83 +40 47 08.2 ...               V0476 Lyr Simbad\nV0588 Lyr      x 19 19 55.00 +40 52 40.0 ...               V0588 Lyr Simbad\n['000-BKK-100', '107', '19:19:08.67', 289.78613281, '41:06:39.6', 41.11100006, '12.415 (0.079)', '10.675 (0.053)', '1.740 (0.095)', '9.820 (0.106)']\n['000-BKK-101', '110', '19:18:28.61', 289.61920166, '41:10:29.4', 41.17483521, '11.797 (0.032)', '10.988 (0.017)', '0.809 (0.036)', '10.571 (0.060)']\n['000-BKK-102', '114', '19:19:19.21', 289.83004761, '41:12:18.0', 41.20500183, '12.042 (0.036)', '11.412 (0.024)', '0.630 (0.043)', '11.032 (0.027)']\n['000-BKK-103', '118', '19:19:06.51', 289.77713013, '41:16:06.3', 41.26841736, '12.359 (0.050)', '11.805 (0.030)', '0.554 (0.058)', '11.419 (0.073)']\n['000-BKK-104', '121', '19:18:51.66', 289.71524048, '41:10:57.9', 41.1827507, '12.772 (0.058)', '12.123 (0.036)', '0.649 (0.068)', '11.743 (0.046)']\n['000-BKK-105', '124', '19:19:06.24', 289.77600098, '41:08:55.7', 41.14880371, '13.117 (0.041)', '12.398 (0.026)', '0.719 (0.049)', '12.045 (0.029)']\n['000-BKK-106', '131', '19:18:43.56', 289.68148804, '41:06:11.6', 41.10322189, '13.759 (0.049)', '13.098 (0.029)', '0.661 (0.057)', '12.805 (0.058)']\n['000-BKK-107', '138', '19:19:05.88', 289.77450562, '41:02:18.5', 41.03847122, '14.621 (0.043)', '13.836 (0.025)', '0.785 (0.050)', '13.428 (0.142)']\n['000-BKK-108', '142', '19:19:00.07', 289.75030518, '41:02:45.0', 41.04583359, '14.850 (0.049)', '14.157 (0.026)', '0.693 (0.055)', '13.816 (0.134)']\n\n\n\n\n\n\n\n\n\n&lt;Figure size 640x480 with 0 Axes&gt;\n\n\n&lt;Figure size 640x480 with 0 Axes&gt;\n\n\nJ422670:R771142 (DQ Vul) 9 November 2024 22:26:20 UTC\nFilters: R V B\nSolving for 6CA592A5\nsolve-field -p -l 30 -O -L 1 -H 2 -u app -3 300.012500 -4 22.780833 -5 2 /tmp/field-solvershevusa7/tmply0e6nzj.fits\n\n\nWARNING: FITSFixedWarning: EPOCH = 'REAL' \na floating-point value was expected. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: RADECSYS= 'ICRS' \nthe RADECSYS keyword is deprecated, use RADESYSa. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: 'datfix' made the change 'Set MJD-OBS to 60623.929621 from DATE-OBS'. [astropy.wcs.wcs]\n\n\nST Vul seq:X38910YS (19)\nSW Vul seq:X38910YT (15)\nCF Vul seq:X38910YU (18)\nDQ Vul seq:X38910YV (14)\nV418 Vul seq:X38910YW (4)\nV433 Vul seq:X38910YX (14)\nV434 Vul seq:X38910YY (14)\nV452 Vul seq:X38910YZ (14)\nV498 Vul seq:X38910ZA (14)\nV571 Vul seq:X38910ZB (11)\nNSV_24959 \njid 422670: (DQ Vul)\n9 November 2024 22:26:20 UTC\nFilters: ('R', 'V', 'B')\nGetting 6CA592A5 from cache\n\n\nWARNING: FITSFixedWarning: EPOCH = 'REAL' \na floating-point value was expected. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: RADECSYS= 'ICRS' \nthe RADECSYS keyword is deprecated, use RADESYSa. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: 'datfix' made the change 'Set MJD-OBS to 60623.929621 from DATE-OBS'. [astropy.wcs.wcs]\n\n\n   GCVS   n_GCVS   RAJ2000     DEJ2000   ... SpType Exists  VarName  Simbad\n                                         ...                               \n--------- ------ ----------- ----------- ... ------ ------ --------- ------\n   ST Vul      x 20 01 13.00 +23 06 34.0 ...               ST    Vul Simbad\n   SW Vul      x 20 00 05.21 +22 56 06.6 ...               SW    Vul Simbad\n   CF Vul      x 20 00 54.55 +23 05 45.8 ...     Me        CF    Vul Simbad\n   DQ Vul      x 20 00 03.01 +22 46 51.7 ...               DQ    Vul Simbad\nV0418 Vul        19 59 41.89 +22 33 49.6 ...               V0418 Vul Simbad\nV0433 Vul      x 20 00 32.54 +22 40 15.4 ...               V0433 Vul Simbad\nV0434 Vul      x 20 00 33.23 +22 43 41.2 ...               V0434 Vul Simbad\nV0452 Vul      x 20 00 43.71 +22 42 39.0 ...    G5V        V0452 Vul Simbad\nV0498 Vul      * 19 59 51.29 +22 42 32.3 ...               V0498 Vul Simbad\nV0571 Vul      * 19 59 29.73 +22 45 13.1 ...               V0571 Vul Simbad\n['000-BJP-942', '89', '20:00:06.21', 300.02587891, '22:42:17.2', 22.70477867, '9.509 (0.028)', '8.939 (0.021)', '0.570 (0.035)', '8.610 (0.027)']\n['000-BJP-945', '104', '20:01:10.65', 300.29437256, '22:49:58.1', 22.83280563, '10.861 (0.030)', '10.419 (0.023)', '0.442 (0.038)', '10.182 (0.030)']\n['000-BJP-948', '108', '20:00:48.16', 300.20065308, '22:48:12.2', 22.8033886, '11.212 (0.024)', '10.751 (0.011)', '0.461 (0.026)', '10.473 (0.016)']\n['000-BJP-947', '109', '20:00:32.38', 300.13491821, '22:52:47.8', 22.87994385, '11.800 (0.033)', '10.852 (0.021)', '0.948 (0.039)', '10.346 (0.027)']\n['000-BJP-943', '112', '20:00:50.91', 300.21212769, '22:37:36.1', 22.62669373, '11.598 (0.028)', '11.157 (0.025)', '0.441 (0.038)', '10.900 (0.033)']\n['000-BJP-949', '116', '20:00:26.53', 300.11053467, '22:48:31.4', 22.80872154, '12.168 (0.022)', '11.572 (0.010)', '0.596 (0.024)', '11.218 (0.022)']\n['000-BJP-944', '117', '20:01:11.82', 300.29925537, '22:47:34.7', 22.79297256, '12.325 (0.045)', '11.723 (0.030)', '0.602 (0.054)', '11.360 (0.046)']\n['000-BJV-365', '132', '19:59:59.45', 299.99771118, '22:56:37.1', 22.94363976, '13.843 (0.005)', '13.178 (—)', '0.665 (0.005)', '—']\n['000-BJV-366', '141', '20:00:04.04', 300.0168457, '22:57:15.8', 22.95438957, '15.032 (0.028)', '14.128 (0.020)', '0.904 (0.034)', '—']\n['000-BJV-367', '143', '19:59:53.78', 299.97409058, '22:56:45.8', 22.94605637, '15.093 (0.009)', '14.262 (0.005)', '0.831 (0.010)', '—']\n['000-BJV-368', '147', '19:59:54.65', 299.97772217, '22:56:37.2', 22.94366646, '15.551 (0.009)', '14.711 (0.005)', '0.840 (0.010)', '—']\n['000-BJV-369', '148', '20:00:10.41', 300.04336548, '22:55:30.5', 22.92513847, '15.656 (0.006)', '14.762 (0.005)', '0.894 (0.008)', '—']\n['000-BCK-030', '151', '19:59:23.26', 299.84692383, '22:47:31.3', 22.79202652, '15.957 (0.019)', '15.140 (0.017)', '0.817 (0.025)', '14.623 (0.019)']\n['000-BJV-370', '151', '20:00:05.85', 300.02438354, '22:56:32.0', 22.9422226, '16.021 (0.033)', '15.085 (0.029)', '0.936 (0.044)', '—']\nf_NSV  NSV  u_NSV n_NSV  RAJ2000    DEJ2000  VarType magMax SpType VarName\n                                                      mag                 \n----- ----- ----- ----- ---------- --------- ------- ------ ------ -------\n      24959           x 19 59 29.9 +22 45 13      M:  14.30               \n\n\n\n\n\n\n\n\n\n&lt;Figure size 640x480 with 0 Axes&gt;\n\n\n&lt;Figure size 640x480 with 0 Axes&gt;\n\n\nJ422669:R771141 (DX Vul) 10 November 2024 21:35:39 UTC\nFilters: R V B\nSolving for 74BFED41\nsolve-field -p -l 30 -O -L 1 -H 2 -u app -3 311.595833 -4 25.818056 -5 2 /tmp/field-solver1p6ozp8a/tmpifxyji0f.fits\n\n\nWARNING: FITSFixedWarning: EPOCH = 'REAL' \na floating-point value was expected. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: RADECSYS= 'ICRS' \nthe RADECSYS keyword is deprecated, use RADESYSa. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: 'datfix' made the change 'Set MJD-OBS to 60624.893000 from DATE-OBS'. [astropy.wcs.wcs]\n\n\nDX Vul seq:X38910ZD (13)\njid 422669: (DX Vul)\n10 November 2024 21:35:39 UTC\nFilters: ('R', 'V', 'B')\nGetting 74BFED41 from cache\n\n\nWARNING: FITSFixedWarning: EPOCH = 'REAL' \na floating-point value was expected. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: RADECSYS= 'ICRS' \nthe RADECSYS keyword is deprecated, use RADESYSa. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: 'datfix' made the change 'Set MJD-OBS to 60624.893000 from DATE-OBS'. [astropy.wcs.wcs]\n\n\n GCVS  n_GCVS   RAJ2000     DEJ2000   VarType ... SpType Exists  VarName  Simbad\n                                              ...                               \n------ ------ ----------- ----------- ------- ... ------ ------ --------- ------\nDX Vul      x 20 46 23.05 +25 49 05.5       M ...               DX    Vul Simbad\n['000-BKP-901', '103', '20:45:38.34', 311.40975952, '25:52:16.1', 25.87113953, '11.100 (0.063)', '10.281 (0.009)', '0.819 (0.064)', '—']\n['000-BLR-840', '109', '20:46:29.36', 311.62234497, '25:38:39.7', 25.6443615, '11.841 (0.023)', '10.908 (0.016)', '0.933 (0.028)', '10.420 (0.022)']\n['000-BLR-841', '111', '20:47:06.89', 311.77871704, '25:36:46.2', 25.61283302, '12.518 (0.031)', '11.146 (0.022)', '1.372 (0.038)', '10.519 (0.023)']\n['000-BLR-842', '116', '20:47:03.45', 311.76437378, '25:52:29.2', 25.87477684, '12.878 (0.017)', '11.641 (0.011)', '1.237 (0.020)', '11.041 (0.018)']\n['000-BKP-903', '118', '20:46:43.01', 311.67919922, '25:44:51.2', 25.74755478, '12.828 (0.025)', '11.785 (0.017)', '1.043 (0.030)', '11.399 (0.036)']\n['000-BKP-904', '120', '20:46:18.04', 311.57516479, '25:47:49.7', 25.79713821, '12.664 (0.018)', '11.989 (0.012)', '0.675 (0.022)', '11.669 (0.018)']\n['000-BMW-919', '124', '20:46:18.99', 311.57913208, '25:35:12.2', 25.58672142, '12.915 (0.025)', '12.383 (0.004)', '0.532 (0.025)', '12.674 (0.007)']\n['000-BLR-843', '128', '20:45:34.01', 311.39169312, '25:49:22.7', 25.82297134, '13.456 (0.023)', '12.820 (0.012)', '0.636 (0.026)', '12.510 (0.021)']\n['000-BMW-920', '135', '20:47:15.38', 311.81408691, '25:48:55.3', 25.81536102, '14.104 (0.041)', '13.478 (0.002)', '0.626 (0.041)', '13.467 (0.195)']\n['000-BMW-921', '139', '20:46:07.42', 311.53091431, '25:50:35.1', 25.84308243, '14.761 (0.046)', '13.893 (—)', '0.868 (0.046)', '13.779 (0.015)']\n['000-BMW-922', '143', '20:46:19.81', 311.58255005, '25:53:36.0', 25.89333344, '14.860 (0.316)', '14.286 (0.050)', '0.574 (0.320)', '14.127 (0.058)']\n['000-BMW-923', '147', '20:47:19.50', 311.83123779, '25:45:35.4', 25.75983238, '15.369 (0.028)', '14.692 (0.015)', '0.677 (0.032)', '—']\n['000-BMW-924', '151', '20:46:55.04', 311.7293396, '25:50:00.4', 25.8334446, '15.908 (0.150)', '15.089 (0.032)', '0.819 (0.153)', '—']\n\n\n\n\n\n\n\n\n\n&lt;Figure size 640x480 with 0 Axes&gt;\n\n\n&lt;Figure size 640x480 with 0 Axes&gt;\n\n\nJ422667:R771139 (V686 Cyg) 10 November 2024 20:48:59 UTC\nFilters: R V B\nSolving for B1955543\nsolve-field -p -l 30 -O -L 1 -H 2 -u app -3 296.754167 -4 35.829722 -5 2 /tmp/field-solverspsrffo2/tmpsgdgdf6w.fits\n\n\nWARNING: FITSFixedWarning: EPOCH = 'REAL' \na floating-point value was expected. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: RADECSYS= 'ICRS' \nthe RADECSYS keyword is deprecated, use RADESYSa. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: 'datfix' made the change 'Set MJD-OBS to 60624.861796 from DATE-OBS'. [astropy.wcs.wcs]\n\n\nV686 Cyg seq:X38910ZE (8)\nV994 Cyg seq:X38910ZF (9)\nV1285 Cyg seq:X38910ZG (5)\nV1288 Cyg seq:X38910ZH (14)\nV1993 Cyg seq:X38910ZI (9)\nNSV_12402 \njid 422667: (V686 Cyg)\n10 November 2024 20:48:59 UTC\nFilters: ('R', 'V', 'B')\nGetting B1955543 from cache\n   GCVS   n_GCVS   RAJ2000     DEJ2000   ... SpType Exists  VarName  Simbad\n                                         ...                               \n--------- ------ ----------- ----------- ... ------ ------ --------- ------\nV0686 Cyg      x 19 47 01.13 +35 49 47.5 ...               V0686 Cyg Simbad\nV0994 Cyg      x 19 49 09.98 +35 41 21.5 ...               V0994 Cyg Simbad\nV1285 Cyg      * 19 44 49.53 +35 59 34.9 ...               V1285 Cyg Simbad\nV1288 Cyg      x 19 46 01.30 +36 05 43.9 ...               V1288 Cyg Simbad\nV1993 Cyg        19 47 19.86 +35 46 18.9 ...               V1993 Cyg Simbad\n\n\nWARNING: FITSFixedWarning: EPOCH = 'REAL' \na floating-point value was expected. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: RADECSYS= 'ICRS' \nthe RADECSYS keyword is deprecated, use RADESYSa. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: 'datfix' made the change 'Set MJD-OBS to 60624.861796 from DATE-OBS'. [astropy.wcs.wcs]\n\n\n['000-BCH-969', '100', '19:47:48.53', 296.95220947, '35:33:26.8', 35.55744553, '11.333 (0.120)', '10.028 (0.074)', '1.305 (0.141)', '—']\n['000-BCH-980', '103', '19:47:58.69', 296.99453735, '35:51:55.7', 35.86547089, '11.528 (0.122)', '10.321 (0.072)', '1.207 (0.142)', '—']\n['000-BCH-912', '112', '19:47:04.66', 296.76940918, '35:48:51.9', 35.81441879, '11.506 (0.125)', '11.199 (0.072)', '0.307 (0.144)', '—']\n['000-BCH-889', '114', '19:46:47.25', 296.6968689, '35:47:43.9', 35.79552841, '11.746 (0.170)', '11.427 (0.070)', '0.319 (0.184)', '—']\n['000-BCH-930', '117', '19:47:14.39', 296.80996704, '35:48:48.6', 35.81349945, '—', '11.687 (0.083)', '—', '—']\n['000-BCH-927', '118', '19:47:13.08', 296.80450439, '35:57:13.4', 35.95372009, '13.509 (0.359)', '11.828 (0.088)', '1.681 (0.370)', '—']\n['000-BCH-915', '126', '19:47:06.73', 296.77804565, '35:55:22.7', 35.92297363, '—', '12.568 (0.126)', '—', '—']\n['000-BCH-920', '136', '19:47:09.83', 296.79095459, '35:53:32.1', 35.89225006, '—', '13.582 (0.061)', '—', '—']\nf_NSV  NSV  u_NSV n_NSV  RAJ2000    DEJ2000  VarType magMax SpType VarName\n                                                      mag                 \n----- ----- ----- ----- ---------- --------- ------- ------ ------ -------\n      12402     -     * 19 46 27.4 +36 05 04          12.00     K5        \n\n\n\n\n\n\n\n\n\n&lt;Figure size 640x480 with 0 Axes&gt;\n\n\n&lt;Figure size 640x480 with 0 Axes&gt;\n\n\n\n# for jid in VSdb['BI Her']['jobs']:\n#     if jid in problematic:\n#         print(f'{jid} problematic')\n#         continue\n#     analyse_job(jid, reprocess=True)\n#     plt.figure(figsize=(8,8))\n#     process_job(jid, reprocess=True, cls=False)\n#     plt.show()\n\n\nuserjobs = ((int(OSO.get_request(int(j['id']))['jid']), int(j['id'])) for j in complete[:3])\nfor n, (jid, rid) in enumerate(userjobs):\n    if jid in (problematic | done):\n        continue\n    print(f\"{n}:R{rid}:J{jid}\")\n    try :\n        if analyse_job(jid, rid, True):\n            done |= {jid}\n    except ConnectionError:\n        print('Unable to finish')\n\n0:R771144:J422672\nJ422672:R771144 (LX Cyg) 11 November 2024 00:25:33 UTC\nFilters: R V B\nGetting EEAD1B8F from cache\nLV Cyg seq:X38910YH (41)\nLX Cyg seq:X38910YI (44)\nLY Cyg seq:X38910YJ (40)\nV681 Cyg seq:X38910YK (32)\nV682 Cyg seq:X38910YL (13)\nV2173 Cyg seq:X38910YM (9)\nV2657 Cyg seq:X38910YN (17)\n\n\nWARNING: FITSFixedWarning: EPOCH = 'REAL' \na floating-point value was expected. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: RADECSYS= 'ICRS' \nthe RADECSYS keyword is deprecated, use RADESYSa. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: 'datfix' made the change 'Set MJD-OBS to 60625.012182 from DATE-OBS'. [astropy.wcs.wcs]\n\n\nNSV_13959 \nNSV_25782 \n1:R771143:J422671\nJ422671:R771143 (EQ Lyr) 10 November 2024 20:24:07 UTC\nFilters: R V B\nGetting 3371DF4E from cache\n\n\nWARNING: FITSFixedWarning: EPOCH = 'REAL' \na floating-point value was expected. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: RADECSYS= 'ICRS' \nthe RADECSYS keyword is deprecated, use RADESYSa. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: 'datfix' made the change 'Set MJD-OBS to 60624.844532 from DATE-OBS'. [astropy.wcs.wcs]\n\n\nEQ Lyr seq:X38910YP (9)\nV476 Lyr seq:X38910YQ (3)\nV588 Lyr seq:X38910YR (8)\n2:R771142:J422670\nJ422670:R771142 (DQ Vul) 9 November 2024 22:26:20 UTC\nFilters: R V B\nGetting 6CA592A5 from cache\nST Vul seq:X38910YS (19)\nSW Vul seq:X38910YT (15)\nCF Vul seq:X38910YU (18)\nDQ Vul seq:X38910YV (14)\nV418 Vul seq:X38910YW (4)\nV433 Vul seq:X38910YX (14)\nV434 Vul seq:X38910YY (14)\n\n\nWARNING: FITSFixedWarning: EPOCH = 'REAL' \na floating-point value was expected. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: RADECSYS= 'ICRS' \nthe RADECSYS keyword is deprecated, use RADESYSa. [astropy.wcs.wcs]\nWARNING: FITSFixedWarning: 'datfix' made the change 'Set MJD-OBS to 60623.929621 from DATE-OBS'. [astropy.wcs.wcs]\n\n\nV452 Vul seq:X38910YZ (14)\nV498 Vul seq:X38910ZA (14)\nV571 Vul seq:X38910ZB (11)\nNSV_24959",
    "crumbs": [
      "process"
    ]
  }
]